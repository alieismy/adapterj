/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 27 16:07:02 GMT 2019
 */

package com.adapterj.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.adapterj.util.SimpleDataSet;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SimpleDataSet_ESTest extends SimpleDataSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleDataSet<Integer> simpleDataSet0 = new SimpleDataSet<Integer>((List<Integer>) null);
      List<Integer> list0 = simpleDataSet0.toList();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>();
      simpleDataSet0.addItem("/rC");
      simpleDataSet0.setItem(0, (String) null);
      String string0 = simpleDataSet0.setItem(0, "j=46i");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      Integer integer0 = new Integer(1447);
      simpleDataSet0.addItem(0, (Object) integer0);
      simpleDataSet0.setItem(0, (Object) null);
      Object object0 = simpleDataSet0.removeItem(0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      simpleDataSet0.addItem((Object) "91");
      Object object0 = simpleDataSet0.removeItem(0);
      assertEquals("91", object0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>();
      simpleDataSet0.addItem("");
      int int0 = simpleDataSet0.getPosition("");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      SimpleDataSet<String> simpleDataSet1 = new SimpleDataSet<String>();
      simpleDataSet1.addItem("/rC");
      simpleDataSet1.setItem(0, "j=46i");
      List<String> list0 = simpleDataSet1.toList();
      simpleDataSet0.addItem((Object) "91");
      simpleDataSet0.addAllItems((Collection<?>) list0);
      int int0 = simpleDataSet0.getPosition("j=46i");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      simpleDataSet0.addItem((Object) "91");
      int int0 = simpleDataSet0.getItemCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>();
      simpleDataSet0.addItem("/rC");
      simpleDataSet0.setItem(0, (String) null);
      String string0 = simpleDataSet0.getItem(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>();
      simpleDataSet0.addItem("/rC");
      String string0 = simpleDataSet0.getItem(0);
      assertEquals("/rC", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>((List<String>) null);
      // Undeclared exception!
      try { 
        simpleDataSet0.setItem(427, "hEI(PB47cxFJ'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.adapterj.util.SimpleDataSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleDataSet<Integer> simpleDataSet0 = new SimpleDataSet<Integer>();
      Integer integer0 = new Integer((-3699));
      // Undeclared exception!
      try { 
        simpleDataSet0.setItem((-3699), integer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3699
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>((List<String>) null);
      // Undeclared exception!
      try { 
        simpleDataSet0.removeItem(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.adapterj.util.SimpleDataSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      // Undeclared exception!
      try { 
        simpleDataSet0.removeItem((-547));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -547
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>((List<String>) null);
      // Undeclared exception!
      try { 
        simpleDataSet0.iterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.adapterj.util.SimpleDataSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SimpleDataSet<Integer> simpleDataSet0 = new SimpleDataSet<Integer>((List<Integer>) null);
      // Undeclared exception!
      try { 
        simpleDataSet0.isEmpty();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SimpleDataSet<Integer> simpleDataSet0 = new SimpleDataSet<Integer>((List<Integer>) null);
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        simpleDataSet0.getPosition(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.adapterj.util.SimpleDataSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>((List<Object>) null);
      // Undeclared exception!
      try { 
        simpleDataSet0.getItem(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.adapterj.util.SimpleDataSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      // Undeclared exception!
      try { 
        simpleDataSet0.getItem((-2836));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>((List<Object>) null);
      // Undeclared exception!
      try { 
        simpleDataSet0.containsAll((Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>((List<Object>) null);
      // Undeclared exception!
      try { 
        simpleDataSet0.contains((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>((List<Object>) null);
      // Undeclared exception!
      try { 
        simpleDataSet0.clear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.adapterj.util.SimpleDataSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>((List<Object>) null);
      // Undeclared exception!
      try { 
        simpleDataSet0.addItem((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.adapterj.util.SimpleDataSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>((List<Object>) null);
      // Undeclared exception!
      try { 
        simpleDataSet0.addItem((-1051), (Object) "com.adapterj.util.SimpleDataSet");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.adapterj.util.SimpleDataSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SimpleDataSet<Integer> simpleDataSet0 = new SimpleDataSet<Integer>();
      SimpleDataSet<Object> simpleDataSet1 = new SimpleDataSet<Object>();
      // Undeclared exception!
      try { 
        simpleDataSet1.addItem((-838), (Object) simpleDataSet0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -838, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>((List<String>) null);
      // Undeclared exception!
      try { 
        simpleDataSet0.addAllItems((Collection<? extends String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.adapterj.util.SimpleDataSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      // Undeclared exception!
      try { 
        simpleDataSet0.addAllItems(0, (Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>();
      List<String> list0 = simpleDataSet0.toList();
      // Undeclared exception!
      try { 
        simpleDataSet0.addAllItems((-1), (Collection<? extends String>) list0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      boolean boolean0 = simpleDataSet0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      assertTrue(simpleDataSet0.isEmpty());
      
      simpleDataSet0.addItem((Object) "91");
      boolean boolean0 = simpleDataSet0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      List<Object> list0 = simpleDataSet0.toList();
      boolean boolean0 = simpleDataSet0.containsAll(list0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      SimpleDataSet<String> simpleDataSet1 = new SimpleDataSet<String>();
      simpleDataSet1.addItem("/rC");
      List<String> list0 = simpleDataSet1.toList();
      boolean boolean0 = simpleDataSet0.containsAll(list0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>();
      SimpleDataSet<Object> simpleDataSet1 = new SimpleDataSet<Object>();
      boolean boolean0 = simpleDataSet1.contains(simpleDataSet0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      int int0 = simpleDataSet0.getPosition("j=46i");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      Iterator<Object> iterator0 = simpleDataSet0.iterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      SimpleDataSet<String> simpleDataSet1 = new SimpleDataSet<String>();
      List<String> list0 = simpleDataSet1.toList();
      boolean boolean0 = simpleDataSet0.addAllItems((Collection<?>) list0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      simpleDataSet0.clear();
      assertTrue(simpleDataSet0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>();
      // Undeclared exception!
      try { 
        simpleDataSet0.getItem(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SimpleDataSet<Integer> simpleDataSet0 = new SimpleDataSet<Integer>((List<Integer>) null);
      // Undeclared exception!
      try { 
        simpleDataSet0.getItemCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.adapterj.util.SimpleDataSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      // Undeclared exception!
      try { 
        simpleDataSet0.removeItem(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Integer integer0 = new Integer(0);
      SimpleDataSet<Integer> simpleDataSet0 = new SimpleDataSet<Integer>();
      simpleDataSet0.addItem(0, integer0);
      boolean boolean0 = simpleDataSet0.contains(integer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>();
      List<String> list0 = simpleDataSet0.toList();
      boolean boolean0 = simpleDataSet0.addAllItems(0, (Collection<? extends String>) list0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SimpleDataSet<Object> simpleDataSet0 = new SimpleDataSet<Object>();
      int int0 = simpleDataSet0.getItemCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>();
      // Undeclared exception!
      try { 
        simpleDataSet0.setItem(0, "j=46i");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SimpleDataSet<String> simpleDataSet0 = new SimpleDataSet<String>();
      simpleDataSet0.addItem("/rC");
      List<String> list0 = simpleDataSet0.toList();
      boolean boolean0 = simpleDataSet0.addAllItems(0, (Collection<? extends String>) list0);
      assertTrue(boolean0);
  }
}
