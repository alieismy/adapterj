/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 27 16:11:59 GMT 2019
 */

package com.adapterj.registry;

import org.junit.Test;
import static org.junit.Assert.*;
import com.adapterj.registry.RegistryException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.lang.reflect.InvocationTargetException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockIOException;
import org.evosuite.runtime.mock.java.lang.MockIllegalAccessException;
import org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException;
import org.evosuite.runtime.mock.java.lang.MockNullPointerException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegistryException_ESTest extends RegistryException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockIOException mockIOException0 = new MockIOException();
      RegistryException registryException0 = new RegistryException("", (IOException) mockIOException0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UnsupportedEncodingException unsupportedEncodingException0 = new UnsupportedEncodingException();
      RegistryException registryException0 = new RegistryException("com.adapterj.registry.RegistryException", unsupportedEncodingException0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UnsupportedEncodingException unsupportedEncodingException0 = new UnsupportedEncodingException("V3OP4Sq1I?e>");
      RegistryException registryException0 = new RegistryException((IOException) unsupportedEncodingException0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassNotFoundException classNotFoundException0 = new ClassNotFoundException("Nci_drh1R%v5g[7B");
      RegistryException registryException0 = new RegistryException(classNotFoundException0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InstantiationException instantiationException0 = new InstantiationException();
      MockIllegalArgumentException mockIllegalArgumentException0 = new MockIllegalArgumentException(instantiationException0);
      RegistryException registryException0 = new RegistryException((IllegalArgumentException) mockIllegalArgumentException0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InstantiationException instantiationException0 = new InstantiationException();
      MockIllegalArgumentException mockIllegalArgumentException0 = new MockIllegalArgumentException(instantiationException0);
      RegistryException registryException0 = new RegistryException("", (IllegalArgumentException) mockIllegalArgumentException0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      RegistryException registryException0 = new RegistryException((String) null, mockThrowable0);
      RegistryException registryException1 = new RegistryException(registryException0);
      assertFalse(registryException1.equals((Object)registryException0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegistryException registryException0 = new RegistryException("F.wT=Z70}!sQO8 dj?", (InvocationTargetException) null);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileNotFoundException fileNotFoundException0 = new FileNotFoundException();
      RegistryException registryException0 = new RegistryException("2zM", fileNotFoundException0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockIllegalAccessException mockIllegalAccessException0 = new MockIllegalAccessException("com.adapterj.registry.RegistryException");
      RegistryException registryException0 = new RegistryException("com.adapterj.registry.RegistryException", (IllegalAccessException) mockIllegalAccessException0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegistryException registryException0 = new RegistryException((InstantiationException) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UnsupportedEncodingException unsupportedEncodingException0 = new UnsupportedEncodingException("V3OP4Sq1I?e>");
      RegistryException registryException0 = new RegistryException(unsupportedEncodingException0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable();
      RegistryException registryException0 = new RegistryException((String) null, mockThrowable0);
      InvocationTargetException invocationTargetException0 = new InvocationTargetException(registryException0);
      RegistryException registryException1 = new RegistryException(invocationTargetException0);
      assertFalse(registryException1.equals((Object)registryException0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileNotFoundException fileNotFoundException0 = new FileNotFoundException();
      RegistryException registryException0 = new RegistryException(fileNotFoundException0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegistryException registryException0 = new RegistryException("AOQ7<,6k:pUqz");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockIllegalAccessException mockIllegalAccessException0 = new MockIllegalAccessException();
      RegistryException registryException0 = new RegistryException((IllegalAccessException) mockIllegalAccessException0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockNullPointerException mockNullPointerException0 = new MockNullPointerException("com.adapterj.registry.RegistryException");
      RegistryException registryException0 = new RegistryException((NullPointerException) mockNullPointerException0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegistryException registryException0 = new RegistryException("uQE", (NullPointerException) null);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassNotFoundException classNotFoundException0 = new ClassNotFoundException((String) null);
      RegistryException registryException0 = new RegistryException((String) null, classNotFoundException0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      InstantiationException instantiationException0 = new InstantiationException("");
      RegistryException registryException0 = new RegistryException("", instantiationException0);
  }
}
